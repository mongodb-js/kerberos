name: Sign and Upload Package
description: 'Signs native modules with garasign'

inputs: 
    aws_role_arn:
      description: 'AWS role input for drivers-github-tools/gpg-sign@v2'
      required: true
    aws_region_name:
      description: 'AWS region name input for drivers-github-tools/gpg-sign@v2'
      required: true
    aws_secret_id:
      description: 'AWS secret id input for drivers-github-tools/gpg-sign@v2'
      required: true
    npm_package_name:
      description: 'The name for the npm package this repository represents'
      required: true

runs:
  using: composite
  steps:
    - uses: actions/download-artifact@v4

    - name: Make signatures directory
      shell: bash
      run: mkdir artifacts

    - name: Set up drivers-github-tools
      uses: mongodb-labs/drivers-github-tools/setup@v2
      with: 
        aws_region_name: ${{ inputs.aws_region_name }}
        aws_role_arn: ${{ inputs.aws_role_arn }}
        aws_secret_id: ${{ inputs.aws_secret_id }}

    - name: Create detached signature
      uses: mongodb-labs/drivers-github-tools/gpg-sign@v2
      with: 
        filenames: 'build-*'
      env: 
        RELEASE_ASSETS: artifacts/

    - name: Copy the tarballs to the artifacts directory
      shell: bash
      run: for filename in build-*; do cp ${filename} artifacts/; done

    - run: npm pack
      shell: bash

    - name: Get release version and release package file name
      id: get_vars
      shell: bash
      run: |
        package_version=$(jq --raw-output '.version' package.json)
        echo "package_version=${package_version}" >> "$GITHUB_OUTPUT"
        echo "package_file=${{ inputs.npm_package_name }}-${package_version}.tgz" >> "$GITHUB_OUTPUT"

    - name: Create detached signature for module
      uses: mongodb-labs/drivers-github-tools/gpg-sign@v2
      with: 
        filenames: ${{ steps.get_vars.outputs.package_file }}
      env: 
        RELEASE_ASSETS: artifacts/

    - name: Display structure of downloaded files
      shell: bash
      run: ls -la artifacts/

    - name: "Upload release artifacts"
      run: gh release upload v${{ steps.get_vars.outputs.package_version }} artifacts/*.*
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
