# Run previous commits to pinpoint a failure's origin.
stepback: true

# Mark failures other than test failures with a purple box.
command_type: system

# Limit maximum test running time.
exec_timeout_secs: 900 # 15 minutes

# What to do when evergreen hits the timeout
timeout:
  - command: shell.exec
    params:
      script: |
        ls -la

functions:
  fetch source:
    - command: git.get_project
      params:
        directory: src
    - command: subprocess.exec
      params:
        working_dir: src
        binary: bash
        add_expansions_to_env: true
        args:
          - '.evergreen/prepare-shell.sh'
    - command: expansions.update
      params:
        file: src/expansion.yml
  run tests:
    - command: subprocess.exec
      type: test
      params:
        working_dir: src
        binary: bash
        args:
          - '.evergreen/run-tests.sh'
        env:
          PROJECT_DIRECTORY: ${PROJECT_DIRECTORY}
  run tests ubuntu:
    - command: subprocess.exec
      type: test
      params:
        binary: docker
        working_dir: src
        env:
          PROJECT_DIRECTORY: ${PROJECT_DIRECTORY}
          PROJECT: ${project}
          GYP_DEFINES: ${GYP_DEFINES|}
        args:
          - run
          - '--interactive'
          - '--volume'
          - ${PROJECT_DIRECTORY}:/app
          - '--volume'
          - ${DRIVERS_TOOLS}:/drivers-tools
          - '--workdir'
          - /app
          - '--env'
          - PROJECT_DIRECTORY=/app
          - '--env'
          - DRIVERS_TOOLS=/drivers-tools
          - '--env'
          - GYP_DEFINES
          - 'ubuntu:22.04'
          - /bin/bash
          - /app/.evergreen/run-tests-ubuntu.sh
  run prebuild:
    - command: subprocess.exec
      type: test
      params:
        working_dir: src
        binary: bash
        args:
          - '.evergreen/run-prebuild.sh'
        env:
          PROJECT_DIRECTORY: ${PROJECT_DIRECTORY}
          NODE_GITHUB_TOKEN: ${github_token}
  install dependencies:
    - command: subprocess.exec
      type: setup
      params:
        working_dir: src
        binary: bash
        add_expansions_to_env: true
        args:
          - .evergreen/install-dependencies.sh
        env:
          PROJECT_DIRECTORY: ${PROJECT_DIRECTORY}
          NODE_LTS_VERSION: ${NODE_LTS_VERSION}
          NPM_VERSION: "9"

pre:
  - func: fetch source

tasks:
  - name: run-tests
    commands:
      - func: install dependencies
      - func: run tests
  - name: run-tests-ubuntu
    commands:
      - func: run tests ubuntu
  - name: run-tests-ubuntu-rtld
    commands:
      - func: run tests ubuntu
        vars:
          GYP_DEFINES: kerberos_use_rtld=false
  - name: run-prebuild
    commands:
      - func: install dependencies
      - func: run prebuild

buildvariants:
  - name: ubuntu2204-64
    display_name: 'Ubuntu 22.04 64-bit'
    run_on: ubuntu2204-small
    expansions:
      has_packages: true
      packager_distro: ubuntu2204
      packager_arch: x86_64
    tasks:
      - run-tests-ubuntu
      - run-tests-ubuntu-rtld
  - name: ubuntu2204-arm64
    display_name: 'Ubuntu 22.04 arm64'
    run_on: ubuntu2204-arm64-small
    expansions:
      has_packages: true
      packager_distro: ubuntu2204
      packager_arch: arm64
    tasks:
      - run-tests-ubuntu
      - run-tests-ubuntu-rtld
